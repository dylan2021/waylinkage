apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'

def releaseTime() {
    return new Date().format("MMdd", TimeZone.getTimeZone("UTC"))
}

android {
    lintOptions {
        abortOnError false
    }
    signingConfigs {
    }
    compileSdkVersion 28
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        // as noted by @Vishnuvathsan you may also need to include
        // variations on the file name. It depends on your dependencies.
        // Some other common variations on notice and license file names
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }
    defaultConfig {
        applicationId "com.android.waylinkage"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 10002
        versionName "V1.0.07"

        ndk {
            moduleName "Crc8Jni"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        // Enabling multidex support.
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    /*  signingConfigs {
          debug {
              storeFile file('debug.keystore')
              storePassword "android"
              keyAlias "androiddebugkey"
              keyPassword "android"
          }
      }*/

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            /* //minifyEnabled false
            // signingConfigs signingConfigs.debug
            // proguardFiles 'proguard-rules.pro'*/
//            versionNameSuffix "-debug"
            // minifyEnabled true
//            zipAlignEnabled false
//            shrinkResources false
            //signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        release {
            //signingConfig signingConfigs.release
            /*minifyEnabled false
            signingConfigs signingConfigs.debug
            proguardFiles 'proguard-rules.pro'*/
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //编译输出的名字
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //outputFileName = "WayLinkage_${variant.versionName}_${releaseTime()}.apk"
            outputFileName = "waylinkage.apk"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        main {
            //jni.srcDirs = []                          //设置禁止gradle生成Android.mk
            //jniLibs.srcDirs = ['src/main/jniLibs']      //设置目标的so存放路径
            jniLibs.srcDir 'libs'
            jni.srcDirs = []
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    /* productFlavors {
         c360 {}
         c360 {}
         uc {}
         baidu {}
         wandoujia {}
         YingYongBao {}

         productFlavors.all { flavor ->
             flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
         }
     }*/

    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }

}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.1.0'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.facebook.fresco:fresco:0.11.0'
    implementation 'net.lingala.zip4j:zip4j:1.3.2'//文件压缩
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation project(path: ':imglib')
    implementation 'com.google.android.gms:play-services-appindexing:8.4.0'
    implementation 'com.android.support:design:28.1.0'
    implementation files('libs/mpermissions.jar')
    implementation 'com.android.support:multidex:1.0.2' //解决 multidex
    implementation 'com.android.support:appcompat-v7:28.1.0'
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    implementation 'com.daimajia.numberprogressbar:library:1.4@aar'
    implementation 'cn.jzvd:jiaozivideoplayer:6.1.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4'
    implementation 'com.android.support:cardview-v7:28.1.0'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.jzxiang.pickerview:TimePickerDialog:0.9.2'//时间选择器
    implementation 'com.daasuu:BubbleLayout:1.0.0'//泡泡弹框
    implementation 'com.gjiazhe:wavesidebar:1.0.2'

    implementation 'com.auth0.android:jwtdecode:1.1.1'//Token JWT
    implementation 'com.afollestad.material-dialogs:core:0.9.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}